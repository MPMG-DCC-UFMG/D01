{"paragraphs":[{"text":"%md\n# Configuração","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:57-0200","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Configuração</h1>\n"}]},"apps":[],"jobName":"paragraph_1605143802863_635979504","id":"20200820-135948_573313834","dateCreated":"2020-11-11T23:16:42-0200","dateStarted":"2020-11-11T23:16:57-0200","dateFinished":"2020-11-11T23:16:57-0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9758"},{"text":"%spark2.conf\nspark.driver.memory           8G\nspark.driver.cores            4\nspark.executor.cores          4\nspark.executor.instances      8\nspark.executor.memory         8G\nspark.default.parallelism     128\nspark.sql.shuffle.partitions  2048\nspark.app.name                MDM-dedupe-v01","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:42-0200","config":{"editorSetting":{"language":"text","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/text","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":208.4,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143802907_440509677","id":"20200820-140001_930015642","dateCreated":"2020-11-11T23:16:42-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9759"},{"text":"%pyspark\nimport sys\nsys.path.append('/usr/hdp/current/spark2-client/jars/hive-warehou\\se-connector-assembly-1.0.0-SNAPSHOT.jar')\nsys.path.append('/usr/hdp/current/spark2-client/jars/pyspark_hwc-1.0.0.3.1.5.0-152.zip')\n\nfrom pyspark_llap import HiveWarehouseSession\nconfiguration = (\n    'jdbc:hive2:TODO;'\n    'serviceDiscoveryMode=zooKeeper;'\n    'zooKeeperNamespace=hiveserver2;'\n    'AuthMech=TODO;'\n    'password=TODO;'\n    'user=TODO'\n)\nspark.conf.set('spark.sql.hive.hiveserver2.jdbc.url', configuration)\nhive = HiveWarehouseSession.session(spark).build()\n\n# Log\nprint(f\"http://TODO/proxy/{spark.sparkContext.applicationId}\")\n\n# Quantidade de particoes geral\nexecutor_instances, executor_cores = 8, 4\nn_particoes = (executor_instances * executor_cores) * 4\nprint(n_particoes)","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:25:34-0200","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":92.8,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143802920_-1088490008","id":"20200820-140122_708976416","dateCreated":"2020-11-11T23:16:42-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9760"},{"text":"%md\n# Modelo Treinado","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:17:09-0200","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{"0":{"graph":{"mode":"table","height":58.2,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Modelo Treinado</h1>\n"}]},"apps":[],"jobName":"paragraph_1605143802932_-1750102265","id":"20200820-140012_637957574","dateCreated":"2020-11-11T23:16:42-0200","dateStarted":"2020-11-11T23:17:09-0200","dateFinished":"2020-11-11T23:17:09-0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9761"},{"text":"%pyspark\n# Bibliotecas\nimport dedupe\nimport logging\n\n# Logging config\nlogging.getLogger('dedupe').setLevel(logging.CRITICAL)\n\n# Carregando modelo dedupe\nnum_cores = 0\narquivo_configuracao = MODELO_TREINADO_DEDUPE\nwith open(arquivo_configuracao, mode='rb') as fp:\n    modelo_dedupe = dedupe.StaticDedupe(settings_file=fp, num_cores=num_cores)","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:24:13-0200","config":{"lineNumbers":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143802942_-1870649808","id":"20200820-140012_298175375","dateCreated":"2020-11-11T23:16:42-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9762"},{"text":"%md\n# Dados de Dataset para CE","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:17:11-0200","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{"0":{"graph":{"mode":"table","height":58.2,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143802957_-713285143","id":"20200820-140012_1382522740","dateCreated":"2020-11-11T23:16:42-0200","dateStarted":"2020-11-11T23:17:11-0200","dateFinished":"2020-11-11T23:17:11-0200","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9763"},{"text":"%pyspark\nfrom pyspark.sql.functions import col, monotonically_increasing_id\n\noffset, tamanho_batch = 0, 100_000\nattrs_selecao = ', '.join(['uuid_pessoa', 'num_cpf_cnpj', 'nome_pessoa', 'num_titulo_eleitor', 'num_nis_nit', 'num_cliente_cemig', 'nome_pai', 'nome_mae', 'data_nasc'])\n\n# Hive SELECT\nquery = f'''\nSELECT {attrs_selecao} \nFROM  mdm_v2.mdm_pessoa_dataset   \nWHERE uuid_pessoa IS NOT NULL \n'''\ndfs_dataset = hive.executeQuery(query)\\\n    .limit(tamanho_batch)\\\n    .dropDuplicates(subset=['uuid_pessoa'])\\\n    .filter(~col('num_cpf_cnpj').contains('*'))\\\n    .filter(~col('nome_pessoa').contains('NAO'))\\\n    .select('*').withColumn('id_int', monotonically_increasing_id())\n    \n# Persist\ndfs_dataset.cache()\ndfs_dataset.createOrReplaceTempView('tabela_dataset')\nprint(dfs_dataset.count())","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:42-0200","config":{"lineNumbers":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143802977_2114797206","id":"20200820-140013_1458627307","dateCreated":"2020-11-11T23:16:42-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9764"},{"text":"%pyspark\ndfs_dataset.orderBy('num_cpf_cnpj', ascending=False).show(20)","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:42-0200","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143802985_59341473","id":"20200921-101653_1927068577","dateCreated":"2020-11-11T23:16:42-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9765"},{"text":"%md\n# Criação dos Blocos (Blocagem)","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:17:14-0200","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Criação dos Blocos (Blocagem)</h1>\n"}]},"apps":[],"jobName":"paragraph_1605143802992_-12063527","id":"20200910-105647_1713371194","dateCreated":"2020-11-11T23:16:42-0200","dateStarted":"2020-11-11T23:17:14-0200","dateFinished":"2020-11-11T23:17:14-0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9766"},{"text":"%md\nFunções para blocagem (expandir para ver as funcoes):","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:17:15-0200","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Funções para blocagem (expandir para ver as funcoes):</p>\n"}]},"apps":[],"jobName":"paragraph_1605143802998_-130342165","id":"20200922-160343_1518331631","dateCreated":"2020-11-11T23:16:42-0200","dateStarted":"2020-11-11T23:17:15-0200","dateFinished":"2020-11-11T23:17:15-0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9767"},{"text":"%pyspark\nimport itertools\nfrom pyspark.sql import Window\nfrom pyspark.sql.functions import col, count, collect_set, explode, struct, udf\nfrom pyspark.sql.types import ArrayType, StringType, MapType, StructType, StructField, LongType\n\n\nudf_blocagem_schema = ArrayType(StructType([StructField('id_int', LongType(), False),\n                                            StructField('block_key', StringType(), False)]))\n@udf(returnType=udf_blocagem_schema)\ndef udf_blocagem(row):\n    \"\"\"UDF para aplicar as regras de blocos.\"\"\"\n    # Conversao para formato de input do dedupe\n    row_dedupe = [(row.id_int, {\n            'mdm_pessoa_dataset.num_cpf_cnpj': row.num_cpf_cnpj,\n            'mdm_pessoa_dataset.nome_pessoa': row.nome_pessoa,\n            'mdm_pessoa_dataset.num_titulo_eleitor': row.num_titulo_eleitor,\n            'mdm_pessoa_dataset.num_nis_nit': row.num_nis_nit,\n            'mdm_pessoa_dataset.num_cliente_cemig': row.num_cliente_cemig,\n            'mdm_pessoa_dataset.nome_pai': row.nome_pai,\n            'mdm_pessoa_dataset.nome_mae': row.nome_mae,\n            'mdm_pessoa_dataset.data_nasc': row.data_nasc\n        }\n    )]\n    \n    # Resultados de blocagem\n    gen_bloco = modelo_dedupe.fingerprinter(row_dedupe)\n    results = []\n    for (block_key, id_int) in gen_bloco:\n        results.append((id_int, block_key))\n        \n    return results\n    \n    \ndef filtragem_blocos(df, columns):\n    \"\"\"Funcao para filtrar os blocos. Somente retornar os blocos que possuem mais de 1 registros.\"\"\"\n    if type(columns) == str:\n        columns = [columns]\n    w = Window.partitionBy(columns)\n    \n    return df.select('*', count(columns[0]).over(w).alias('dupeCount'))\\\n           .where('dupeCount > 1')\\\n           .drop('dupeCount')\n           \n           \nudf_ids_combs_schema = ArrayType(StructType([StructField('id_int_1', LongType(), False),\n                                             StructField('id_int_2', LongType(), False)]))\n@udf(returnType=udf_ids_combs_schema)\ndef udf_ids_combinations(lista_ids):\n    lista_ids = list(lista_ids)\n    combs = list(itertools.combinations(lista_ids, 2))\n    \n    return combs","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:43-0200","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143803006_1561348206","id":"20200922-160316_1401482508","dateCreated":"2020-11-11T23:16:43-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9768"},{"text":"%pyspark\n# Gerando a tabela_bloco (tmp)\ndfs_blocos = dfs_dataset.repartition(n_particoes)\\\n    .select(explode(udf_blocagem(struct([dfs_dataset[col] for col in dfs_dataset.columns]))).alias('exploded'))\\\n    .select(\n        col('exploded')['id_int'].alias('id_int'),\n        col('exploded')['block_key'].alias('block_key')\n    )\n\n# Elimina blocos que possuem somente 1 registro\ndfs_blocos = filtragem_blocos(dfs_blocos, 'block_key')\ndfs_blocos.createOrReplaceTempView('tabela_bloco')\n# print(dfs_blocos.count())\n\n# Possivel codigo para realizar o agrupamento de pares no futuro (se necessário).\n# Pares agrupados por block_key\n# dfs_blocos_pares = dfs_blocos.groupby('block_key')\\\n#     .agg(collect_set('id_int').alias('ids_agg_bloco'))\\\n#     .select(explode(udf_ids_combinations('ids_agg_bloco')).alias('ids_combs'))\\\n#     .select(\n#         col('ids_combs')['id_int_1'].alias('id_int_1'), \n#         col('ids_combs')['id_int_2'].alias('id_int_2')\n#     )\n# print(dfs_blocos_pares.count())","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:43-0200","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143803013_1920683335","id":"20200923-142124_1067822182","dateCreated":"2020-11-11T23:16:43-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9769"},{"text":"%pyspark\ndfs_blocos.show(50, truncate=50)","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:43-0200","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143803020_-476669019","id":"20200923-142912_52023223","dateCreated":"2020-11-11T23:16:43-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9770"},{"text":"%md\n# Scores dos Pares\n","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:17:19-0200","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Scores dos Pares</h1>\n"}]},"apps":[],"jobName":"paragraph_1605143803028_1302328519","id":"20200910-105759_590946719","dateCreated":"2020-11-11T23:16:43-0200","dateStarted":"2020-11-11T23:17:19-0200","dateFinished":"2020-11-11T23:17:19-0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9771"},{"text":"%md\nSeleção dos pares:","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:17:20-0200","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Seleção dos pares:</p>\n"}]},"apps":[],"jobName":"paragraph_1605143803035_1827940193","id":"20200923-151203_221743096","dateCreated":"2020-11-11T23:16:43-0200","dateStarted":"2020-11-11T23:17:20-0200","dateFinished":"2020-11-11T23:17:20-0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9772"},{"text":"%pyspark\n# Atributos selecao\nattr_id = 'id_int'\nattrs_casamento = ['num_cpf_cnpj', 'nome_pessoa', 'num_titulo_eleitor', 'num_nis_nit', 'num_cliente_cemig', 'nome_pai', 'nome_mae', 'data_nasc']\natributos_pessoa_a = ', '.join([f'a.{x} AS {x}_a' for x in attrs_casamento])\natributos_pessoa_b = ', '.join([f'b.{x} AS {x}_b' for x in attrs_casamento])\n\n# Spark query\nquery = f\"\"\"\nSELECT \n    a.{attr_id}           AS {attr_id}_a, \n    {atributos_pessoa_a}, \n    b.{attr_id}           AS {attr_id}_b, \n    {atributos_pessoa_b} \nFROM \n    (\n        SELECT DISTINCT \n            l.{attr_id} AS east, \n            r.{attr_id} AS west \n        FROM \n            tabela_bloco            AS l \n            INNER JOIN tabela_bloco AS r \n                USING (block_key) \n        WHERE l.{attr_id} < r.{attr_id} \n    )                                  AS ids \n    INNER JOIN tabela_dataset        AS a \n        ON ids.east = a.{attr_id} \n    INNER JOIN tabela_dataset        AS b \n        ON ids.west = b.{attr_id}\n\"\"\"\ndfs_dataset_pares = spark.sql(query)\n# print(dfs_dataset_pares.count())","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:43-0200","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143803041_340938512","id":"20200910-105758_1377285745","dateCreated":"2020-11-11T23:16:43-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9773"},{"text":"%pyspark\ncolumns_to_show = ['id_int_a', 'num_cpf_cnpj_a', 'nome_pessoa_a', 'id_int_b', 'num_cpf_cnpj_b', 'nome_pessoa_b']\ndfs_dataset_pares.limit(100)\\\n    .select([c for c in dfs_dataset_pares.columns if c in columns_to_show])\\\n    .orderBy('id_int_b')\\\n    .show(100)","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:43-0200","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143803048_1713716894","id":"20200923-152541_885678597","dateCreated":"2020-11-11T23:16:43-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9774"},{"text":"%md\nFunções para score (expandir para ver as funções):","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:17:22-0200","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Funções para score (expandir para ver as funções):</p>\n"}]},"apps":[],"jobName":"paragraph_1605143803055_-722004850","id":"20200923-144639_477555714","dateCreated":"2020-11-11T23:16:43-0200","dateStarted":"2020-11-11T23:17:22-0200","dateFinished":"2020-11-11T23:17:22-0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9775"},{"text":"%pyspark\nfrom pyspark.sql.functions import col, udf, explode, struct\nfrom pyspark.sql.types import StringType, FloatType, LongType, StructField, ArrayType\n\nudf_scores_schema = StructType([StructField('pares', ArrayType(LongType())),\n                                StructField('score', FloatType())])\n@udf(returnType=udf_scores_schema)\ndef gerar_scores(row):\n    # Pairs\n    a_record = (row.id_int_a, {\n        'mdm_pessoa_dataset.num_cpf_cnpj': row.num_cpf_cnpj_a,\n        'mdm_pessoa_dataset.nome_pessoa': row.nome_pessoa_a,\n        'mdm_pessoa_dataset.num_titulo_eleitor': row.num_titulo_eleitor_a,\n        'mdm_pessoa_dataset.num_nis_nit': row.num_nis_nit_a,\n        'mdm_pessoa_dataset.num_cliente_cemig': row.num_cliente_cemig_a,\n        'mdm_pessoa_dataset.nome_pai': row.nome_pai_a,\n        'mdm_pessoa_dataset.nome_mae': row.nome_mae_a,\n        'mdm_pessoa_dataset.data_nasc': row.data_nasc_a\n    })\n    b_record = (row.id_int_b, {\n        'mdm_pessoa_dataset.num_cpf_cnpj': row.num_cpf_cnpj_b,\n        'mdm_pessoa_dataset.nome_pessoa': row.nome_pessoa_b,\n        'mdm_pessoa_dataset.num_titulo_eleitor': row.num_titulo_eleitor_b,\n        'mdm_pessoa_dataset.num_nis_nit': row.num_nis_nit_b,\n        'mdm_pessoa_dataset.num_cliente_cemig': row.num_cliente_cemig_b,\n        'mdm_pessoa_dataset.nome_pai': row.nome_pai_b,\n        'mdm_pessoa_dataset.nome_mae': row.nome_mae_b,\n        'mdm_pessoa_dataset.data_nasc': row.data_nasc_b\n    })\n    \n    # Scores\n    scores_gen = modelo_dedupe.score([(a_record, b_record)])\n    score_resultados = list(scores_gen)[0]\n    \n    # Resultados\n    pares = list(map(int, score_resultados[0]))  # List[int]\n    score = float(score_resultados[1])           # Float\n    \n    return (pares, score)\n","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:43-0200","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143803063_1877260340","id":"20200923-151213_1121760088","dateCreated":"2020-11-11T23:16:43-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9776"},{"text":"%pyspark\nprint('teste claudio')","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:43-0200","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143803071_-1278616373","id":"20201111-205713_1178007984","dateCreated":"2020-11-11T23:16:43-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9777"},{"text":"%pyspark\nfrom pyspark.sql.functions import col, count, collect_set, explode, struct, udf # claudio\nrow = struct([dfs_dataset_pares[x] for x in dfs_dataset_pares.columns])\ndfs_pares_scores = dfs_dataset_pares.repartition(n_particoes)\\\n    .select(gerar_scores(row).alias('score_resultados'))\\\n    .select(\n        col('score_resultados')['pares'].alias('pares'), \n        col('score_resultados')['score'].alias('score')\n    )\n# dfs_pares_scores = dfs_pares_scores.filter(dfs_pares_scores.score > .5)    \n# dfs_pares_scores = dfs_pares_scores.select(dfs_pares_scores.pares[0].alias('par_1'), dfs_pares_scores.pares[1].alias('par_2'), 'score')\n#print(dfs_pares_scores.count())\n#print( dfs_pares_scores[\"SCORE\"].value_counts().sort_index() )","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:43-0200","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143803079_-1094173757","id":"20200910-105829_731012074","dateCreated":"2020-11-11T23:16:43-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9778"},{"text":"%pyspark\n# dfs_pares_scores = dfs_pares_scores.select(dfs_pares_scores.pares[0].alias('par_1'), dfs_pares_scores.pares[1].alias('par_2'), 'score')\ndfs_pares_scores.cache()\ndfs_pares_scores.createOrReplaceTempView('tabela_scores')\ndfs_pares_scores.count()","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:43-0200","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143803108_1393221366","id":"20201022-115401_2121149806","dateCreated":"2020-11-11T23:16:43-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9779"},{"text":"%md\n# Casamento","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:17:27-0200","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Casamento</h1>\n"}]},"apps":[],"jobName":"paragraph_1605143803132_1631263508","id":"20200822-161654_1913399011","dateCreated":"2020-11-11T23:16:43-0200","dateStarted":"2020-11-11T23:17:27-0200","dateFinished":"2020-11-11T23:17:27-0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9780"},{"text":"%pyspark\n","user":"ufmg.christianreis","dateUpdated":"2020-11-11T23:16:43-0200","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1605143803189_-1237852911","id":"20200910-095708_1601419331","dateCreated":"2020-11-11T23:16:43-0200","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:9781"}],"name":"MDM_V2/ufmg/dedupe/codigo_casamento_git","id":"2FRMCJVHC","noteParams":{},"noteForms":{},"angularObjects":{"phoenix:shared_process":[],"md:shared_process":[],"jdbc:shared_process":[],"spark2:ufmg.christianreis:":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}